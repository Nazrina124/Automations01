# Following steps need to be run manually
# sudo curl -L -o /etc/yum.repos.d/gh-cli.repo https://cli.github.com/packages/rpm/gh-cli.repo
# sudo dnf install gh -y
# gh auth login -s admin:org

- name: Setup Prompt
  ansible.builtin.shell: set-prompt github-runner

# Extend LVM and Filesystem
- name: Check if LVM volume group exists
  ansible.builtin.shell: vgdisplay | grep -q "vg_runner"
  register: vg_exists
  failed_when: false
  changed_when: false

# Grow the partition to use new EBS size
- name: Extend EBS volume partition
  ansible.builtin.shell: |
      parted -s /dev/xvda resizepart 1 100%
      pvresize /dev/xvda1
      when: vg_exists.rc == 0
      register: pv_resize
      changed_when: pv_resize.rc == 0

- name: Extend LVM volume group
  ansible.builtin.shell: vgextend vg_runner /dev/xvda1
      when: vg_exists.rc == 0 and pv_resize.changed
      register: vg_extend
      changed_when: vg_extend.rc == 0

- name: Extend logical volume
  ansible.builtin.shell: lvextend -l +100%FREE /dev/vg_runner/lv_root
      when: vg_exists.rc == 0 and pv_resize.changed
      register: lv_extend
      changed_when: lv_extend.rc == 0
- name: Resize filesystem
  ansible.builtin.shell: xfs_growfs /
      when: vg_exists.rc == 0 and lv_extend.changed
      register: fs_resize
      changed_when: fs_resize.rc == 0


- name: Add Github Runner User
  ansible.builtin.user:
    name: grunner

- name: Create github directory
  ansible.builtin.file:
    path: /actions-runner
    state: directory
    owner: grunner
    group: grunner

- name: Download & Extract Runner
  ansible.builtin.unarchive:
    src: https://github.com/actions/runner/releases/download/v2.317.0/actions-runner-linux-x64-2.317.0.tar.gz
    dest: "/actions-runner"
    remote_src: yes
    owner: grunner
    group: grunner

- name: Grab Token
  ansible.builtin.shell: |
    gh api --method POST -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /orgs/Nazrina124/actions/runners/registration-token | jq .token
  register: token
  become_user: ec2-user # Token can be fetched by ec2-user as gh login was done by that user.

- name: Install libicu dependency
  ansible.builtin.dnf:
    name: libicu
    state: latest

- name: Get the runner count
  ansible.builtin.shell: |
    gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /orgs/Nazrina124/actions/runners | jq .total_count |xargs
  register: runner_count
  become_user: ec2-user

- name: Get the runner status
  ansible.builtin.shell: |
    gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /orgs/Nazrina124/actions/runners | jq '.runners[] | select(.name == "ec2") | .status' |xargs
  register: runner_status
  become_user: ec2-user

- name: Configure Github Runner
  ansible.builtin.shell: ./config.sh --url https://github.com/Nazrina124 --token {{ token.stdout }} --runnergroup Default --name ec2 --labels rhel --work _work --replace
  args:
    chdir: /actions-runner
  become_user: grunner
  when: runner_count.stdout == "0" or runner_status.stdout == "offline"

- name: Update Path file
  ansible.builtin.copy:
    src: path
    dest: /actions-runner/.path
  become_user: grunner
  when: runner_count.stdout == "0" or runner_status.stdout == "offline"

- name: Install Runner Service
  ansible.builtin.shell: ./svc.sh install grunner ;  ./svc.sh start
  args:
    chdir: /actions-runner
  when: runner_count.stdout == "0" or runner_status.stdout == "offline"

- name: Download Terraform Repo file
  ansible.builtin.get_url:
    url: https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
    dest: /etc/yum.repos.d/hashicorp.repo

- name: Install Terraform
  ansible.builtin.dnf:
    name: terraform
    state: latest

- name: Install Ansible
  ansible.builtin.shell: pip-3.11 install ansible